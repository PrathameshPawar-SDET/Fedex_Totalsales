/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.20.0'
    testImplementation group: 'org.testng', name: 'testng', version: '7.6.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.3-jre'

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'

    // https://mvnrepository.com/artifact/com.relevantcodes/extentreports
    implementation group: 'com.relevantcodes', name: 'extentreports' , version: '2.40.2'

    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.8.0'

}

application {
    // Define the main class for the application.
    mainClass = 'fedex_totalsales.App'
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG() {
        useDefaultListeners = true // generates the test report
        suites "/src/test/java/fedex_totalsales/testng.xml"
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTEST RESULT: ${result.resultType}"
            println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                    "${result.successfulTestCount} SUCCEEDED, " +
                    "${result.failedTestCount} FAILED, " +
                    "${result.skippedTestCount} SKIPPED"
        }
    }

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat = 'full'

        // Optionally do:
        showStackTraces = true
    }

    testLogging.showStandardStreams = true
    test.outputs.upToDateWhen {false}

}
